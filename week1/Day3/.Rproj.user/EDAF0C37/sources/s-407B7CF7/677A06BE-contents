---
title: "R Notebook"
output: html_notebook
---

```{r}
library (dplyr)
library (janitor)
library (CodeClanData)
library (tidyverse)
```

```{r}

```
1.
```{r}
some_letters <- c("E", "R", "R", "O", "R")
```


2.
```{r}
message <- c("does", "this", "work", "?")

toupper(message)
```


3.
```{r}
mtcars %>% 
  select(mpg, cyl, disp) %>%
  filter(mpg < 20)
## Error in mtcars %>% select(mpg, cyl, disp) %>>% filter(mpg < 20): could not find function "%>>%"
```


4.
```{r}
iris %>% 
  select(Sepal.Length, Sepal.Width, Species) %>% 
  arrange(Sepal.Length)
```



5. Find the average tooth length for where the supplement is vitamin C.
```{r}
ToothGrowth %>%
  #select(len)
  filter(supp == "VC") %>% 
  summarise(avg_len_vc = mean(len)) 
  
```

6.Create a vector of animals (cat, dog, rabbit, horse), then use the sample function to get 10 random animals from those categories.

animals <- c("cat", dog, "rabbit", "horse")
## Error in eval(expr, envir, enclos): object 'dog' not found
sample(animals, 10)
## Error in sample(animals, 10): object 'animals' not found

```{r}
animals <- c("cat", "dog", "rabbit", "horse")
sample(animals, 10, replace=TRUE)
```

7. dog_names <- c("Lucy", "Molly", "Charlie", "Luna", "Bella", "Cooper")

cat_names < c("Luna", "Lily", "Lucy", "Charlie", "Max", "Oliver")

```{r}
dog_names <- c("Lucy", "Molly", "Charlie", "Luna", "Bella", "Cooper")

cat_names <- c("Luna", "Lily", "Lucy", "Charlie", "Max", "Oliver")

intersect(dog_names, cat_names)
```

8. chickwts %>% 
  filter(weight =< 150) %>% 
  mutate(weight_kg == weight * 0.001)
  
```{r}
chickwts %>% 
  filter(weight <= 150) %>% 
  mutate(weight_kg = weight * 0.001)
```
  
9. tibble(alphabet = LETTERS(),
       numbers = 1:25) %>% 
  filter(letter != c(A, B, C))
  
```{r}
tibble(alphabet = LETTERS,
       numbers = 1:26) %>% 
  filter(LETTERS != c("A", "B", "C"))
```
  
  10. # Don't change anything in this code chunk
# but you will need to include it in your notebooks

set.seed(999)

scent_ratings <- tibble(
  iD = rep(1:10, each = 5),
  SCENT = rep(c("New book", "Cut grass", "Rose oil", "Fresh linen", "Wet dog"), 10),
  rating = sample(c(0:5, NA), 50, replace = TRUE),
  PersonAge = rep(NA, 50)
)

```{r}
# Don't change anything in this code chunk
# but you will need to include it in your notebooks

set.seed(999)

scent_ratings <- tibble(
  iD = rep(1:10, each = 5),
  SCENT = rep(c("New book", "Cut grass", "Rose oil", "Fresh linen", "Wet dog"), 10),
  rating = sample(c(0:5, NA), 50, replace = TRUE),
  PersonAge = rep(NA, 50)
)
```

  scent_ratings %>% janitor:clean_names()
  
```{r}
scent_ratings %>% janitor::clean_names()
```
  scent_ratings %>% 
  drop_na() %>% 
  group_by(scent) %>% 
  summarise(mean_rating = mean())
  
```{r}
scent_ratings <- scent_ratings %>% janitor::clean_names()
scent_ratings %>% 
  select(scent, rating) %>% 
  drop_na() %>% 
  group_by(scent) %>% 
  summarise(mean_rating = mean(rating))
```
  
  